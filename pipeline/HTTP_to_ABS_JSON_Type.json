{
	"name": "HTTP_to_ABS_JSON_Type",
	"properties": {
		"description": "Copy all User JSON data to ABS",
		"activities": [
			{
				"name": "merge data files",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "fetch_page_results",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"wildcardFileName": "*.json",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings",
							"copyBehavior": "MergeFiles"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2
				},
				"inputs": [
					{
						"referenceName": "DS_JSON_jsonplaceholder",
						"type": "DatasetReference",
						"parameters": {
							"data_type": {
								"value": "@pipeline().parameters.data_type",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DS_JSON_jsonplaceholder",
						"type": "DatasetReference",
						"parameters": {
							"data_type": {
								"value": "@{pipeline().parameters.data_type}/merged/",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "delete paged user data",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "merge data files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_JSON_jsonplaceholder",
						"type": "DatasetReference",
						"parameters": {
							"data_type": {
								"value": "@pipeline().parameters.data_type",
								"type": "Expression"
							}
						}
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": false,
						"wildcardFileName": "*.json",
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "delete all type data",
				"type": "Delete",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_JSON_jsonplaceholder",
						"type": "DatasetReference",
						"parameters": {
							"data_type": {
								"value": "@pipeline().parameters.data_type",
								"type": "Expression"
							}
						}
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"wildcardFileName": "*.json",
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "get_rec_count",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "delete all type data",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "https://jsonplaceholder.cypress.io/@{pipeline().parameters.data_type}?_start=1&_end=2",
						"type": "Expression"
					},
					"method": "GET"
				}
			},
			{
				"name": "set_rec_count",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "get_rec_count",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "rec_count",
					"value": {
						"value": "@activity('get_rec_count').output.ADFWebActivityResponseHeaders['X-Total-Count']",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set_last_page",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "set_rec_count",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "last_page",
					"value": {
						"value": "@string(\n\tadd(\n\t\tdiv(\n\t\t\tint(variables('rec_count')),\n\t\t\tpipeline().parameters.page_size\n\t\t),\n\t\tif(\n\t\t\tequals(\n\t\t\t\tmod(\n\t\t\t\t\tint(variables('rec_count')),\n\t\t\t\t\tpipeline().parameters.page_size\n\t\t\t\t),\n\t\t\t0),\n\t\t0,\n\t\t1\n\t\t)\n\t)\n)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set_pages_array",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "set_max_page",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "pages",
					"value": {
						"value": "@range(1,int(variables('max_page')))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set_max_page",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "set_last_page",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "max_page",
					"value": {
						"value": "@if(\n  greater(\n    int(variables('last_page')),\n    pipeline().parameters.max_pages\n  ),\n  string(pipeline().parameters.max_pages),\n  variables('last_page')\n)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "fetch_page_results",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "set_pages_array",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@variables('pages')",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 10,
					"activities": [
						{
							"name": "Copy data from HTTP to ADS",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [
								{
									"name": "Source",
									"value": "@{pipeline().parameters.data_type}?_page=@{item()}&_limit=@{pipeline().parameters.page_size}"
								},
								{
									"name": "Destination",
									"value": "json/@{pipeline().parameters.data_type}/"
								}
							],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET"
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings",
										"filePattern": "setOfObjects"
									}
								},
								"enableStaging": false,
								"dataIntegrationUnits": 2
							},
							"inputs": [
								{
									"referenceName": "DS_REST_jsonplaceholder",
									"type": "DatasetReference",
									"parameters": {
										"page": {
											"value": "@{item()}",
											"type": "Expression"
										},
										"limit": {
											"value": "@pipeline().parameters.page_size",
											"type": "Expression"
										},
										"data_type": {
											"value": "@pipeline().parameters.data_type",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_JSON_jsonplaceholder",
									"type": "DatasetReference",
									"parameters": {
										"data_type": {
											"value": "@pipeline().parameters.data_type",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"page_size": {
				"type": "int",
				"defaultValue": 0
			},
			"max_pages": {
				"type": "int",
				"defaultValue": 0
			},
			"data_type": {
				"type": "string"
			}
		},
		"variables": {
			"last_page": {
				"type": "String"
			},
			"rec_count": {
				"type": "String",
				"defaultValue": "0"
			},
			"pages": {
				"type": "Array"
			},
			"max_page": {
				"type": "String"
			}
		},
		"annotations": []
	}
}