{
	"name": "storagelatraining_to_destinationdatala",
	"properties": {
		"description": "test copy file from storagelatraining to destinationdatala",
		"activities": [
			{
				"name": "jsonplaceholder_users",
				"description": "test user data",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "users/"
					},
					{
						"name": "Destination",
						"value": "csv//"
					}
				],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings",
							"copyBehavior": "PreserveHierarchy"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"parallelCopies": 1,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['id']"
								},
								"sink": {
									"ordinal": 1
								}
							},
							{
								"source": {
									"path": "$['name']"
								},
								"sink": {
									"ordinal": 2
								}
							},
							{
								"source": {
									"path": "$['username']"
								},
								"sink": {
									"ordinal": 3
								}
							},
							{
								"source": {
									"path": "$['email']"
								},
								"sink": {
									"ordinal": 4
								}
							},
							{
								"source": {
									"path": "$['address']['street']"
								},
								"sink": {
									"ordinal": 5
								}
							},
							{
								"source": {
									"path": "$['address']['suite']"
								},
								"sink": {
									"ordinal": 6
								}
							},
							{
								"source": {
									"path": "$['address']['city']"
								},
								"sink": {
									"ordinal": 7
								}
							},
							{
								"source": {
									"path": "$['address']['zipcode']"
								},
								"sink": {
									"ordinal": 8
								}
							},
							{
								"source": {
									"path": "$['address']['geo']['lat']"
								},
								"sink": {
									"ordinal": 9
								}
							},
							{
								"source": {
									"path": "$['address']['geo']['lng']"
								},
								"sink": {
									"ordinal": 10
								}
							},
							{
								"source": {
									"path": "$['phone']"
								},
								"sink": {
									"ordinal": 11
								}
							},
							{
								"source": {
									"path": "$['website']"
								},
								"sink": {
									"ordinal": 12
								}
							},
							{
								"source": {
									"path": "$['company']['name']"
								},
								"sink": {
									"ordinal": 13
								}
							},
							{
								"source": {
									"path": "$['company']['catchPhrase']"
								},
								"sink": {
									"ordinal": 14
								}
							},
							{
								"source": {
									"path": "$['company']['bs']"
								},
								"sink": {
									"ordinal": 15
								}
							}
						],
						"collectionReference": "",
						"mapComplexValuesToString": true
					}
				},
				"inputs": [
					{
						"referenceName": "DS_REST_jsonplaceholder_Users",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DS_CSV_jsonplaceholder_Users",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "UntilMaxCount",
				"description": "Loop API call until Max Records retrieved",
				"type": "Until",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greaterOrEquals(\n  mul(\n    int(variables('Page')),\n    pipeline().parameters.PageSize)\n  ,\n  pipeline().parameters.MaxResults\n) ",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "jsonplaceholder_users_copy",
							"description": "copy test user data",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [
								{
									"name": "Source",
									"value": "users/"
								},
								{
									"name": "Destination",
									"value": "csv//"
								}
							],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"additionalColumns": [
										{
											"value": "$$COLUMN:"
										}
									],
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"additionalHeaders": {
										"_limit": {
											"value": "@pipeline().parameters.PageSize",
											"type": "Expression"
										}
									},
									"paginationRules": {
										"_page": {
											"value": "@variables('Page')",
											"type": "Expression"
										}
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings",
										"copyBehavior": "PreserveHierarchy"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"parallelCopies": 1,
								"dataIntegrationUnits": 2,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "$['id']"
											},
											"sink": {
												"ordinal": 1
											}
										},
										{
											"source": {
												"path": "$['name']"
											},
											"sink": {
												"ordinal": 2
											}
										},
										{
											"source": {
												"path": "$['username']"
											},
											"sink": {
												"ordinal": 3
											}
										},
										{
											"source": {
												"path": "$['email']"
											},
											"sink": {
												"ordinal": 4
											}
										},
										{
											"source": {
												"path": "$['address']['street']"
											},
											"sink": {
												"ordinal": 5
											}
										},
										{
											"source": {
												"path": "$['address']['suite']"
											},
											"sink": {
												"ordinal": 6
											}
										},
										{
											"source": {
												"path": "$['address']['city']"
											},
											"sink": {
												"ordinal": 7
											}
										},
										{
											"source": {
												"path": "$['address']['zipcode']"
											},
											"sink": {
												"ordinal": 8
											}
										},
										{
											"source": {
												"path": "$['address']['geo']['lat']"
											},
											"sink": {
												"ordinal": 9
											}
										},
										{
											"source": {
												"path": "$['address']['geo']['lng']"
											},
											"sink": {
												"ordinal": 10
											}
										},
										{
											"source": {
												"path": "$['phone']"
											},
											"sink": {
												"ordinal": 11
											}
										},
										{
											"source": {
												"path": "$['website']"
											},
											"sink": {
												"ordinal": 12
											}
										},
										{
											"source": {
												"path": "$['company']['name']"
											},
											"sink": {
												"ordinal": 13
											}
										},
										{
											"source": {
												"path": "$['company']['catchPhrase']"
											},
											"sink": {
												"ordinal": 14
											}
										},
										{
											"source": {
												"path": "$['company']['bs']"
											},
											"sink": {
												"ordinal": 15
											}
										}
									],
									"collectionReference": "",
									"mapComplexValuesToString": true
								}
							},
							"inputs": [
								{
									"referenceName": "DS_REST_jsonplaceholder_Users",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DS_CSV_jsonplaceholder_Users",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Increase Page",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "jsonplaceholder_users_copy",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "Page",
								"value": {
									"value": "add(@variables('Page'),1)",
									"type": "Expression"
								}
							}
						}
					],
					"timeout": "7.00:00:00"
				}
			}
		],
		"concurrency": 1,
		"parameters": {
			"PageSize": {
				"type": "int",
				"defaultValue": 2
			},
			"MaxResults": {
				"type": "int",
				"defaultValue": 10
			}
		},
		"variables": {
			"Page": {
				"type": "String",
				"defaultValue": "0"
			}
		},
		"annotations": []
	}
}