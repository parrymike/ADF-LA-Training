{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADF-LA-Training"
		},
		"LS_ABS_jsonplaceholder_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ABS_jsonplaceholder'"
		},
		"LS_REST_jsonplaceholder_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://jsonplaceholder.cypress.io/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LS_ABS_jsonplaceholder')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Linked service to store test data",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_ABS_jsonplaceholder_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_REST_jsonplaceholder')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "fake REST API for testing",
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LS_REST_jsonplaceholder_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_JSON_jsonplaceholder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABS_jsonplaceholder",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"data_type": {
						"type": "string",
						"defaultValue": "users"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().data_type",
							"type": "Expression"
						},
						"container": "json"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ABS_jsonplaceholder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_REST_jsonplaceholder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Test dataset for data",
				"linkedServiceName": {
					"referenceName": "LS_REST_jsonplaceholder",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"page": {
						"type": "string",
						"defaultValue": "1"
					},
					"limit": {
						"type": "string",
						"defaultValue": "2"
					},
					"data_type": {
						"type": "string",
						"defaultValue": "users"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@{dataset().data_type}?_page=@{dataset().page}&_limit=@{dataset().limit}",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_REST_jsonplaceholder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HTTP_to_ABS_JSON_by_page')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy data to blob storage by page",
				"activities": [
					{
						"name": "Copy data from HTTP to ADS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "users?_page=@{pipeline().parameters.page}&_limit=@{pipeline().parameters.limit}"
							},
							{
								"name": "Destination",
								"value": "json//users.json"
							}
						],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "setOfObjects"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2
						},
						"inputs": [
							{
								"referenceName": "DS_REST_jsonplaceholder",
								"type": "DatasetReference",
								"parameters": {
									"page": {
										"value": "@pipeline().parameters.page",
										"type": "Expression"
									},
									"limit": {
										"value": "@pipeline().parameters.limit",
										"type": "Expression"
									},
									"data_type": {
										"value": "@pipeline().parameters.data_type",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_JSON_jsonplaceholder",
								"type": "DatasetReference",
								"parameters": {
									"data_type": {
										"value": "@pipeline().parameters.data_type",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"concurrency": 1,
				"parameters": {
					"page": {
						"type": "Int",
						"defaultValue": 1
					},
					"limit": {
						"type": "Int",
						"defaultValue": 2
					},
					"data_type": {
						"type": "string",
						"defaultValue": "users"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_REST_jsonplaceholder')]",
				"[concat(variables('factoryId'), '/datasets/DS_JSON_jsonplaceholder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HTTP_to_ABS_JSON_Type')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy all User JSON data to ABS",
				"activities": [
					{
						"name": "merge data files",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "fetch_page_results",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2
						},
						"inputs": [
							{
								"referenceName": "DS_JSON_jsonplaceholder",
								"type": "DatasetReference",
								"parameters": {
									"data_type": {
										"value": "@pipeline().parameters.data_type",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_JSON_jsonplaceholder",
								"type": "DatasetReference",
								"parameters": {
									"data_type": {
										"value": "@{pipeline().parameters.data_type}/merged/",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "delete paged user data",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "merge data files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_JSON_jsonplaceholder",
								"type": "DatasetReference",
								"parameters": {
									"data_type": {
										"value": "@pipeline().parameters.data_type",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": false,
								"wildcardFileName": "*.json",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "delete all type data",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_JSON_jsonplaceholder",
								"type": "DatasetReference",
								"parameters": {
									"data_type": {
										"value": "@pipeline().parameters.data_type",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*.json",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "get_rec_count",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "delete all type data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://jsonplaceholder.cypress.io/@{pipeline().parameters.data_type}?_start=1&_end=2\n\n",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "set_rec_count",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "get_rec_count",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "rec_count",
							"value": {
								"value": "@activity('get_rec_count').output.ADFWebActivityResponseHeaders['X-Total-Count']",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set_last_page",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "set_rec_count",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "last_page",
							"value": {
								"value": "@string(\n\tadd(\n\t\tdiv(\n\t\t\tint(variables('rec_count')),\n\t\t\tpipeline().parameters.page_size\n\t\t),\n\t\tif(\n\t\t\tequals(\n\t\t\t\tmod(\n\t\t\t\t\tint(variables('rec_count')),\n\t\t\t\t\tpipeline().parameters.page_size\n\t\t\t\t),\n\t\t\t0),\n\t\t0,\n\t\t1\n\t\t)\n\t)\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set_pages_array",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "set_max_page",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pages",
							"value": {
								"value": "@range(1,int(variables('max_page')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set_max_page",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "set_last_page",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "max_page",
							"value": {
								"value": "@if(greater(int(variables('last_page')),pipeline().parameters.max_pages),string(pipeline().parameters.max_pages),variables('last_page'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "fetch_page_results",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "set_pages_array",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('pages')",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "HTTP_to_ABS_JSON_by_page",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "HTTP_to_ABS_JSON_by_page",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"page": {
												"value": "@{item()}",
												"type": "Expression"
											},
											"limit": {
												"value": "@pipeline().parameters.page_size",
												"type": "Expression"
											},
											"data_type": {
												"value": "@pipeline().parameters.data_type",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"page_size": {
						"type": "int",
						"defaultValue": 0
					},
					"max_pages": {
						"type": "int",
						"defaultValue": 0
					},
					"data_type": {
						"type": "string"
					}
				},
				"variables": {
					"page": {
						"type": "String",
						"defaultValue": "1"
					},
					"last_page": {
						"type": "String"
					},
					"temp_page": {
						"type": "String"
					},
					"rec_count": {
						"type": "String",
						"defaultValue": "0"
					},
					"pages": {
						"type": "Array"
					},
					"max_page": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_JSON_jsonplaceholder')]",
				"[concat(variables('factoryId'), '/pipelines/HTTP_to_ABS_JSON_by_page')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HTTP_to_ABS_JSON_AllData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachDataType",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('Data_Types')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Get_DataType_data",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "HTTP_to_ABS_JSON_Type",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"page_size": {
												"value": "@pipeline().parameters.page_size",
												"type": "Expression"
											},
											"max_pages": {
												"value": "@pipeline().parameters.max_pages",
												"type": "Expression"
											},
											"data_type": {
												"value": "@item()",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"page_size": {
						"type": "int",
						"defaultValue": 20
					},
					"max_pages": {
						"type": "int",
						"defaultValue": 10
					}
				},
				"variables": {
					"Data_Types": {
						"type": "Array",
						"defaultValue": [
							"users",
							"posts"
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/HTTP_to_ABS_JSON_Type')]"
			]
		}
	]
}